<Activity mc:Ignorable="sap sap2010" x:Class="OnShiftAPIIntegration" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Facility" Type="InArgument(x:String)" />
    <x:Property Name="in_TotalRequiredResourse" Type="InArgument(x:Int32)" />
    <x:Property Name="in_ShiftTime" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_BearerToken" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1467,6400</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>OnShiftAPIIntegration_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="37">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="30">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="OnShiftAPIIntegration" sap:VirtualizedContainerService.HintSize="1477,6335" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="inputString" />
      <Variable x:TypeArguments="x:Int32" Name="StatusCode" />
      <Variable x:TypeArguments="x:String" Name="ValueOutput" />
      <Variable x:TypeArguments="njl:JObject" Name="OutputJSON" />
      <Variable x:TypeArguments="x:String" Name="StartTime" />
      <Variable x:TypeArguments="x:String" Name="EndTime" />
      <Variable x:TypeArguments="x:String" Name="EndDate" />
      <Variable x:TypeArguments="x:String" Name="StartDate" />
      <Variable x:TypeArguments="x:String" Name="ShiftTag" />
      <Variable x:TypeArguments="njl:JObject" Name="ValuesJSONOutput" />
      <Variable x:TypeArguments="x:String" Name="valueOfCurrentWeek" />
      <Variable x:TypeArguments="x:String" Name="facility_name" />
      <Variable x:TypeArguments="x:String" Name="unit_name" />
      <Variable x:TypeArguments="x:String" Name="APIExecute" />
      <Variable x:TypeArguments="x:String" Name="ReservedResource" />
      <Variable x:TypeArguments="x:String" Name="disciplineId" />
      <Variable x:TypeArguments="x:Int32" Name="ActualRequiredResource" />
      <Variable x:TypeArguments="x:String" Name="TotallyNewRequestraise" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadTextFile Content="[inputString]" DisplayName="Read Text File" FileName="inputFileAs.json" sap:VirtualizedContainerService.HintSize="1435,79" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
    <Assign sap:VirtualizedContainerService.HintSize="1435,60" sap2010:WorkflowViewState.IdRef="Assign_11">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[inputString]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[inputString.Replace("[","").Replace("]","")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="1435,59" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_9" JsonObject="[OutputJSON]" JsonString="[inputString]" />
    <Assign DisplayName="Assign-facilityIdFromJSON" sap:VirtualizedContainerService.HintSize="1435,60" sap2010:WorkflowViewState.IdRef="Assign_12">
      <Assign.To>
        <OutArgument x:TypeArguments="njl:JToken">[OutputJSON("facilityId")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="njl:JToken">[in_Config("FacilityID").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign-unitIdFromJSON" sap:VirtualizedContainerService.HintSize="1435,60" sap2010:WorkflowViewState.IdRef="Assign_14">
      <Assign.To>
        <OutArgument x:TypeArguments="njl:JToken">[OutputJSON("unitId")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="njl:JToken">[in_Config("UnitID").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[in_Facility.Contains(&quot;CNA&quot;)]" DisplayName="If-CNAOrNurses" sap:VirtualizedContainerService.HintSize="1435,310" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign-disciplineIdFromJSON(For CNA)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
            <Assign.To>
              <OutArgument x:TypeArguments="njl:JToken">[OutputJSON("disciplineId")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="njl:JToken">[in_Config("CAN_ID").ToString]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign-disciplineIdFromJSON(For NURSES)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
            <Assign.To>
              <OutArgument x:TypeArguments="njl:JToken">[OutputJSON("disciplineId")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="njl:JToken">[in_Config("RN_ID").ToString]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Else>
    </If>
    <Assign sap:VirtualizedContainerService.HintSize="1435,60" sap2010:WorkflowViewState.IdRef="Assign_48">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[disciplineId]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[OutputJSON("disciplineId").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1435,60" sap2010:WorkflowViewState.IdRef="Assign_18">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[StartTime]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_ShiftTime.Split("-"C)(0)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1435,60" sap2010:WorkflowViewState.IdRef="Assign_19">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[EndTime]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_ShiftTime.Split("-"C)(1)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1435,60" sap2010:WorkflowViewState.IdRef="Assign_37">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[EndTime]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[EndTime.Split(Environment.NewLine.ToCharArray)(0)]</InArgument>
      </Assign.Value>
    </Assign>
    <If sap2010:Annotation.AnnotationText="NightShiftTag" Condition="[StartTime.Contains(&quot;p&quot;) and EndTime.Contains(&quot;a&quot;)]" DisplayName="If-CalculatingDateViaStartAndEndTime" sap:VirtualizedContainerService.HintSize="1435,341" sap2010:WorkflowViewState.IdRef="If_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[EndDate]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Now.AddDays(1).ToString("yyyy-MM-dd")]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_31">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[ShiftTag]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">Night</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign-shiftTagFromJSON" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_34">
            <Assign.To>
              <OutArgument x:TypeArguments="njl:JToken">[OutputJSON("shiftTag")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="njl:JToken">[ShiftTag]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_25">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[EndDate]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Now.AddDays(cint(in_Config("AdvanceDaysForBooking").ToString)).ToString("yyyy-MM-dd")]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Else>
    </If>
    <If sap2010:Annotation.AnnotationText="EveningShiftTag" Condition="[StartTime.Contains(&quot;p&quot;) and EndTime.Contains(&quot;p&quot;)]" DisplayName="If-CalculatingDateViaStartAndEndTime" sap:VirtualizedContainerService.HintSize="1435,470" sap2010:WorkflowViewState.IdRef="If_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_32">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[ShiftTag]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">Evening</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign-shiftTagFromJSON" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_35">
            <Assign.To>
              <OutArgument x:TypeArguments="njl:JToken">[OutputJSON("shiftTag")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="njl:JToken">[ShiftTag]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <If sap2010:Annotation.AnnotationText="DayShiftTag" Condition="[StartTime.Contains(&quot;a&quot;) and EndTime.Contains(&quot;p&quot;)]" DisplayName="If-CalculatingDateViaStartAndEndTime" sap:VirtualizedContainerService.HintSize="1435,470" sap2010:WorkflowViewState.IdRef="If_6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_33">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[ShiftTag]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">Morning</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign-shiftTagFromJSON" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_36">
            <Assign.To>
              <OutArgument x:TypeArguments="njl:JToken">[OutputJSON("shiftTag")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="njl:JToken">[ShiftTag]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_13">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <Assign sap:VirtualizedContainerService.HintSize="1435,60" sap2010:WorkflowViewState.IdRef="Assign_26">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[StartDate]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Now.AddDays(cint(in_Config("AdvanceDaysForBooking").ToString)).ToString("yyyy-MM-dd")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign-StartDateFromJSON" sap:VirtualizedContainerService.HintSize="1435,60" sap2010:WorkflowViewState.IdRef="Assign_27">
      <Assign.To>
        <OutArgument x:TypeArguments="njl:JToken">[OutputJSON("startDate")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="njl:JToken">[StartDate]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign-ENDDateFromJSON" sap:VirtualizedContainerService.HintSize="1435,60" sap2010:WorkflowViewState.IdRef="Assign_28">
      <Assign.To>
        <OutArgument x:TypeArguments="njl:JToken">[OutputJSON("endDate")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="njl:JToken">[EndDate]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[StartTime.Contains(&quot;p&quot;)]" DisplayName="If-StartTimeCalculation" sap:VirtualizedContainerService.HintSize="1435,310" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[StartTime]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[(cint(StartTime.Replace("p",""))+12).ToString+":0:00"]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_21">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[StartTime]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[StartTime.Replace("a","").ToString+":0:00"]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Else>
    </If>
    <Assign DisplayName="Assign-StartTimeFromJSON" sap:VirtualizedContainerService.HintSize="1435,60" sap2010:WorkflowViewState.IdRef="Assign_29">
      <Assign.To>
        <OutArgument x:TypeArguments="njl:JToken">[OutputJSON("startTime")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="njl:JToken">[StartTime]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[EndTime.Contains(&quot;p&quot;)]" DisplayName="If-ENDTimeCalculation" sap:VirtualizedContainerService.HintSize="1435,660" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="695,502" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[EndTime.Contains(&quot;p&quot;) and EndTime.Contains(&quot;:&quot;)]" sap:VirtualizedContainerService.HintSize="653,410" sap2010:WorkflowViewState.IdRef="If_7">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_14">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[EndTime]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[EndTime.Split(":"C)(0)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[EndTime]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[(cint(EndTime.Replace("p",""))+12).ToString+":30:00"]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_15">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[EndTime]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[(cint(EndTime.Replace("p",""))+12).ToString+":0:00"]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="695,502" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[EndTime.Contains(&quot;a&quot;) and EndTime.Contains(&quot;:&quot;)]" sap:VirtualizedContainerService.HintSize="653,410" sap2010:WorkflowViewState.IdRef="If_8">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[EndTime]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[EndTime.Split(":"C)(0)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[EndTime]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[EndTime.Replace("a","").ToString+":30:00"]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_17">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[EndTime]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[EndTime.Replace("a","").ToString+":0:00"]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Else>
    </If>
    <Assign DisplayName="Assign-StartTimeFromJSON" sap:VirtualizedContainerService.HintSize="1435,60" sap2010:WorkflowViewState.IdRef="Assign_30">
      <Assign.To>
        <OutArgument x:TypeArguments="njl:JToken">[OutputJSON("endTime")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="njl:JToken">[EndTime]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1435,60" sap2010:WorkflowViewState.IdRef="Assign_13">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[inputString]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["["+Environment.NewLine+OutputJSON.ToString+Environment.NewLine+"]"]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1435,60" sap2010:WorkflowViewState.IdRef="Assign_44">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[facility_name]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Config("FacilityName").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1435,60" sap2010:WorkflowViewState.IdRef="Assign_45">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[unit_name]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Config("UnitName").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[facility_name.ToLower.Trim=unit_name.ToLower.Trim]" sap:VirtualizedContainerService.HintSize="1435,310" sap2010:WorkflowViewState.IdRef="If_9">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_18">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_43">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[inputString]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[inputString.Replace("{startDate}",StartDate).Replace("{startTime}",StartTime).Replace("{endTime}",EndTime).Replace("{endDate}",EndDate).Replace("{facility_name}",facility_name).Replace("/{unit_name}","")]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_19">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_42">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[inputString]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[inputString.Replace("{startDate}",StartDate).Replace("{startTime}",StartTime).Replace("{endTime}",EndTime).Replace("{endDate}",EndDate).Replace("{facility_name}",facility_name).Replace("{unit_name}",unit_name)]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Else>
    </If>
    <Sequence DisplayName="CheckingTheShiftAlreadyExistsOrNot" sap:VirtualizedContainerService.HintSize="1435,204" sap2010:WorkflowViewState.IdRef="Sequence_20">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CheckForDuplicateShiftExists workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="CheckForDuplicateShiftExists.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_startTime">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="StartTime" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_startDate">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="StartDate" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_endTime">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="EndTime" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_endDate">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="EndDate" />
          </InArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_ReserveTotalRequiredResource">
            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="ReservedResource" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_APICall">
            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="APIExecute" />
          </OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_BearerToken">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_BearerToken" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_disciplineId">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="disciplineId" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_FacilityID">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;FacilityID&quot;).ToString" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_UnitID">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;UnitID&quot;).ToString" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_NumberOfStaff">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TotalRequiredResourse.ToString" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ShiftTag">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="ShiftTag" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ShiftType" />
          <OutArgument x:TypeArguments="x:Int32" x:Key="out_ActualRequiredResource">
            <mva:VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="ActualRequiredResource" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_TotallyNewRequestRaise">
            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="TotallyNewRequestraise" />
          </OutArgument>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
            <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
          </InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <If Condition="[TotallyNewRequestraise=&quot;Yes&quot;]" sap:VirtualizedContainerService.HintSize="1435,1130" sap2010:WorkflowViewState.IdRef="If_13">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_28">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap:VirtualizedContainerService.HintSize="881,984" sap2010:WorkflowViewState.IdRef="Sequence_31">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap:VirtualizedContainerService.HintSize="839,761" sap2010:WorkflowViewState.IdRef="Sequence_30">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="797,91" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;raising request for staff freshly&quot;]" />
              <Assign DisplayName="Assign-numberOfStaffFromJSON" sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                <Assign.To>
                  <OutArgument x:TypeArguments="njl:JToken">[OutputJSON("numberOfStaff")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="njl:JToken">[ActualRequiredResource]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[facility_name.ToLower.Trim=unit_name.ToLower.Trim]" sap:VirtualizedContainerService.HintSize="797,307" sap2010:WorkflowViewState.IdRef="If_14">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,149" sap2010:WorkflowViewState.IdRef="Sequence_32">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:HttpClient ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[&quot;[&quot;+Environment.NewLine+OutputJSON.ToString.Replace(&quot;{startDate}&quot;,Convert.ToDateTime(StartDate).ToString(&quot;MM-dd-yyyy&quot;)).Replace(&quot;{startTime}&quot;,StartTime).Replace(&quot;{endDate}&quot;,Convert.ToDateTime(EndDate).ToString(&quot;MM-dd-yyyy&quot;)).Replace(&quot;{endTime}&quot;,EndTime).Replace(&quot;{unit_name}&quot;,unit_name).Replace(&quot;{facility_name}&quot;,&quot;&quot;).Replace(&quot;/&quot;,&quot;&quot;).ToString+Environment.NewLine+&quot;]&quot;]" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request-Posting" EnableSSLVerification="True" EndPoint="[in_Config(&quot;ShiftCreationEndPoint&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,57" sap2010:WorkflowViewState.IdRef="HttpClient_6" Method="POST" Password="[Nothing]" Result="[ValueOutput]" StatusCode="[StatusCode]" TimeoutMS="60000" Username="[Nothing]">
                      <ui:HttpClient.Attachments>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.Attachments>
                      <ui:HttpClient.Cookies>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.Cookies>
                      <ui:HttpClient.Headers>
                        <InArgument x:TypeArguments="x:String" x:Key="Authorization">
                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_BearerToken" />
                        </InArgument>
                      </ui:HttpClient.Headers>
                      <ui:HttpClient.Parameters>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.Parameters>
                      <ui:HttpClient.UrlSegments>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.UrlSegments>
                    </ui:HttpClient>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,149" sap2010:WorkflowViewState.IdRef="Sequence_33">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:HttpClient ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[&quot;[&quot;+Environment.NewLine+OutputJSON.ToString.Replace(&quot;{startDate}&quot;,Convert.ToDateTime(StartDate).ToString(&quot;MM-dd-yyyy&quot;)).Replace(&quot;{startTime}&quot;,StartTime).Replace(&quot;{endDate}&quot;,Convert.ToDateTime(EndDate).ToString(&quot;MM-dd-yyyy&quot;)).Replace(&quot;{endTime}&quot;,EndTime).Replace(&quot;{unit_name}&quot;,unit_name).Replace(&quot;{facility_name}&quot;,facility_name)+Environment.NewLine+&quot;]&quot;]" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request-Posting" EnableSSLVerification="True" EndPoint="[in_Config(&quot;ShiftCreationEndPoint&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,57" sap2010:WorkflowViewState.IdRef="HttpClient_5" Method="POST" Password="[Nothing]" Result="[ValueOutput]" StatusCode="[StatusCode]" TimeoutMS="60000" Username="[Nothing]">
                      <ui:HttpClient.Attachments>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.Attachments>
                      <ui:HttpClient.Cookies>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.Cookies>
                      <ui:HttpClient.Headers>
                        <InArgument x:TypeArguments="x:String" x:Key="Authorization">[in_BearerToken]</InArgument>
                      </ui:HttpClient.Headers>
                      <ui:HttpClient.Parameters>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.Parameters>
                      <ui:HttpClient.UrlSegments>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.UrlSegments>
                    </ui:HttpClient>
                  </Sequence>
                </If.Else>
              </If>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="797,91" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[StatusCode]" />
            </Sequence>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="839,91" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[ValueOutput+Environment.NewLine+&quot;*************************************************************************&quot;+Environment.NewLine]" />
          </Sequence>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="1168,972" sap2010:WorkflowViewState.IdRef="Sequence_29">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[ActualRequiredResource&gt;=1]" sap:VirtualizedContainerService.HintSize="1126,880" sap2010:WorkflowViewState.IdRef="If_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="881,722" sap2010:WorkflowViewState.IdRef="Sequence_27">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence sap:VirtualizedContainerService.HintSize="839,499" sap2010:WorkflowViewState.IdRef="Sequence_23">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign-numberOfStaffFromJSON" sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                    <Assign.To>
                      <OutArgument x:TypeArguments="njl:JToken">[OutputJSON("numberOfStaff")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="njl:JToken">[ActualRequiredResource]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[facility_name.ToLower.Trim=unit_name.ToLower.Trim]" sap:VirtualizedContainerService.HintSize="797,307" sap2010:WorkflowViewState.IdRef="If_16">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,149" sap2010:WorkflowViewState.IdRef="Sequence_36">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:HttpClient ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[&quot;[&quot;+Environment.NewLine+OutputJSON.ToString.Replace(&quot;{startDate}&quot;,Convert.ToDateTime(StartDate).ToString(&quot;MM-dd-yyyy&quot;)).Replace(&quot;{startTime}&quot;,StartTime).Replace(&quot;{endDate}&quot;,Convert.ToDateTime(EndDate).ToString(&quot;MM-dd-yyyy&quot;)).Replace(&quot;{endTime}&quot;,EndTime).Replace(&quot;{unit_name}&quot;,unit_name).Replace(&quot;{facility_name}&quot;,&quot;&quot;).Replace(&quot;/&quot;,&quot;&quot;).ToString+Environment.NewLine+&quot;]&quot;]" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request-Posting" EnableSSLVerification="True" EndPoint="[in_Config(&quot;ShiftCreationEndPoint&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,57" sap2010:WorkflowViewState.IdRef="HttpClient_9" Method="POST" Password="[Nothing]" Result="[ValueOutput]" StatusCode="[StatusCode]" TimeoutMS="60000" Username="[Nothing]">
                          <ui:HttpClient.Attachments>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Attachments>
                          <ui:HttpClient.Cookies>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Cookies>
                          <ui:HttpClient.Headers>
                            <InArgument x:TypeArguments="x:String" x:Key="Authorization">[in_BearerToken]</InArgument>
                          </ui:HttpClient.Headers>
                          <ui:HttpClient.Parameters>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Parameters>
                          <ui:HttpClient.UrlSegments>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.UrlSegments>
                        </ui:HttpClient>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,149" sap2010:WorkflowViewState.IdRef="Sequence_37">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:HttpClient ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[&quot;[&quot;+Environment.NewLine+OutputJSON.ToString.Replace(&quot;{startDate}&quot;,Convert.ToDateTime(StartDate).ToString(&quot;MM-dd-yyyy&quot;)).Replace(&quot;{startTime}&quot;,StartTime).Replace(&quot;{endDate}&quot;,Convert.ToDateTime(EndDate).ToString(&quot;MM-dd-yyyy&quot;)).Replace(&quot;{endTime}&quot;,EndTime).Replace(&quot;{unit_name}&quot;,unit_name).Replace(&quot;{facility_name}&quot;,facility_name)+Environment.NewLine+&quot;]&quot;]" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request-Posting" EnableSSLVerification="True" EndPoint="[in_Config(&quot;ShiftCreationEndPoint&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,57" sap2010:WorkflowViewState.IdRef="HttpClient_10" Method="POST" Password="[Nothing]" Result="[ValueOutput]" StatusCode="[StatusCode]" TimeoutMS="60000" Username="[Nothing]">
                          <ui:HttpClient.Attachments>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Attachments>
                          <ui:HttpClient.Cookies>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Cookies>
                          <ui:HttpClient.Headers>
                            <InArgument x:TypeArguments="x:String" x:Key="Authorization">[in_BearerToken]</InArgument>
                          </ui:HttpClient.Headers>
                          <ui:HttpClient.Parameters>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Parameters>
                          <ui:HttpClient.UrlSegments>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.UrlSegments>
                        </ui:HttpClient>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="839,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[ValueOutput+Environment.NewLine+&quot;*************************************************************************&quot;+Environment.NewLine]" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_26">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Required resource is less than one, we are not going to create the shift for these timeslot.&quot;+Environment.NewLine+&quot;*************************************************************************&quot;+Environment.NewLine]" />
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>